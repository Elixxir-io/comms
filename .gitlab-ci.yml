# From: https://about.gitlab.com/2017/09/21/how-to-create-ci-cd-pipeline-with-autodeploy-to-kubernetes-using-gitlab-and-helm/

variables:
  REPO_DIR: gitlab.com/elixxir
  REPO_NAME: comms
  DOCKER_IMAGE: elixxirlabs/cuda-go:latest
  MIN_CODE_COVERAGE: "77"

before_script:
  - go version || echo "Go executable not found."
  - echo $CI_BUILD_REF
  - echo $CI_PROJECT_DIR
  - echo $PWD

  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan -t rsa gitlab.com > ~/.ssh/known_hosts
  - git config --global url."git@gitlab.com:".insteadOf "https://gitlab.com/"
  - export PATH=$HOME/go/bin:$PATH
  - export GOPRIVATE="*gitlab.com/elixxir/*,*gitlab.com/xx_network/*"

stages:
  - build
  - trigger_integration

build:
  stage: build
  image: $DOCKER_IMAGE
  script:
    - git clean -ffdx
    - go mod vendor -v
    - go build ./...
    - go mod tidy
    - mkdir -p testdata
    # Test coverage
    - go-acc --covermode atomic --output testdata/coverage.out ./... -- -v
    - grep -v mixmessages\.pb\.go testdata/coverage.out | grep -v gateway\.go | grep -v -e testkeys | grep -v node\.go > testdata/coverage-real.out
    - go tool cover -func=testdata/coverage-real.out
    - go tool cover -html=testdata/coverage-real.out -o testdata/coverage.html

    # Test Coverage Check
    - go tool cover -func=testdata/coverage-real.out | grep "total:" | awk '{print $3}' | sed 's/\%//g' > testdata/coverage-percentage.txt
    - export CODE_CHECK=$(echo "$(cat testdata/coverage-percentage.txt) >= $MIN_CODE_COVERAGE" | bc -l)
    - (if [ "$CODE_CHECK" == "1" ]; then echo "Minimum coverage of $MIN_CODE_COVERAGE succeeded"; else echo "Minimum coverage of $MIN_CODE_COVERAGE failed"; exit 1; fi);
    - mkdir -p release
    - GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags '-w -s' ./...
    - cd release
  artifacts:
    paths:
      - vendor/
      - testdata/
      - release/

build_udb:
  stage: triggers
  trigger:
    project: elixxir/client
    branch: $CI_COMMIT_REF_NAME
  except:
    - tags
  allow_failure: true

trigger_integration:
  stage: triggers
  trigger:
    project: elixxir/integration
    branch: $CI_COMMIT_REF_NAME
  only:
    - release
    - master
